"""Basic DB scheme

Revision ID: 470952a0478b
Revises: 
Create Date: 2022-04-14 12:01:23.197117

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
from app.core.model.seed import seed_data

revision = '470952a0478b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('athlete',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('last_login', sa.TIMESTAMP(), nullable=True),
    sa.Column('last_modified', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('athlete_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=10), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('icerink',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('address', sa.String(length=40), nullable=True),
    sa.Column('price_per_hour', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('athlete_roles_assoc',
    sa.Column('athlete_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('skill_level', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['athlete_id'], ['athlete.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['athlete_role.id'], ),
    sa.PrimaryKeyConstraint('athlete_id', 'role_id')
    )
    op.create_table('followers',
    sa.Column('from_id', sa.Integer(), nullable=False),
    sa.Column('to_id', sa.Integer(), nullable=False),
    sa.Column('opt_out_mode', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['from_id'], ['athlete.id'], ),
    sa.ForeignKeyConstraint(['to_id'], ['athlete.id'], ),
    sa.PrimaryKeyConstraint('from_id', 'to_id')
    )
    op.create_table('game',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=25), nullable=False),
    sa.Column('exp_players_cnt', sa.Integer(), nullable=False),
    sa.Column('exp_goalies_cnt', sa.Integer(), nullable=False),
    sa.Column('exp_referees_cnt', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('est_price', sa.Integer(), nullable=False),
    sa.Column('remarks', sa.String(length=200), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('other_costs', sa.Integer(), nullable=False),
    sa.Column('is_private', sa.Boolean(), nullable=False),
    sa.Column('goalie_renum', sa.Integer(), nullable=False),
    sa.Column('referee_renum', sa.Integer(), nullable=False),
    sa.Column('exp_skill', sa.Integer(), nullable=False),
    sa.Column('time_created', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_update', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['icerink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('game_goalies',
    sa.Column('athlete_id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['athlete_id'], ['athlete.id'], ),
    sa.ForeignKeyConstraint(['game_id'], ['game.id'], ),
    sa.PrimaryKeyConstraint('athlete_id', 'game_id')
    )
    op.create_table('game_organizers',
    sa.Column('athlete_id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['athlete_id'], ['athlete.id'], ),
    sa.ForeignKeyConstraint(['game_id'], ['game.id'], ),
    sa.PrimaryKeyConstraint('athlete_id', 'game_id')
    )
    op.create_table('game_players',
    sa.Column('athlete_id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['athlete_id'], ['athlete.id'], ),
    sa.ForeignKeyConstraint(['game_id'], ['game.id'], ),
    sa.PrimaryKeyConstraint('athlete_id', 'game_id')
    )
    op.create_table('game_referees',
    sa.Column('athlete_id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['athlete_id'], ['athlete.id'], ),
    sa.ForeignKeyConstraint(['game_id'], ['game.id'], ),
    sa.PrimaryKeyConstraint('athlete_id', 'game_id')
    )
    # ### end Alembic commands ###
    seed_data()

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('game_referees')
    op.drop_table('game_players')
    op.drop_table('game_organizers')
    op.drop_table('game_goalies')
    op.drop_table('game')
    op.drop_table('followers')
    op.drop_table('athlete_roles_assoc')
    op.drop_table('icerink')
    op.drop_table('athlete_role')
    op.drop_table('athlete')
    # ### end Alembic commands ###
